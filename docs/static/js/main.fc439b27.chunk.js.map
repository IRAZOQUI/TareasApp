{"version":3,"sources":["components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/todoReducer.js","components/08-useReducer/TodoApp.js","hooks/useForm.js","index.js"],"names":["TodoListItem","todo","index","handletoggle","handleDelet","className","done","onClick","id","desc","TodoList","todos","map","i","todoReducer","state","action","type","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","useEffect","setItem","stringify","length","todoId","onSubmit","e","trim","preventDefault","newTodo","Date","getTime","placeholder","autoComplete","onChange","ReactDOM","render","document","getElementById"],"mappings":"8LAEaA,G,MAAe,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,KAAKC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,aAAaC,EAAiB,EAAjBA,YAClD,OACA,qBAEIC,UAAU,kBAFd,UAII,oBACIA,UAAS,UAAKJ,EAAKK,MAAQ,YAC3BC,QAAS,kBAAIJ,EAAaF,EAAKO,KAFnC,UAICN,EAAQ,EAJT,IAIcD,EAAKQ,QAEnB,wBACIJ,UAAU,iBACVE,QAAS,kBAAMH,EAAYH,EAAKO,KAFpC,sBATKP,EAAKO,MCFLE,EAAW,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMR,EAA8B,EAA9BA,aAAaC,EAAiB,EAAjBA,YACzC,OACI,oBAAIC,UAAU,8BAAd,SAGIM,EAAMC,KAAI,SAACX,EAAMY,GAAP,OAEN,cAAC,EAAD,CAEIZ,KAAOA,EACPC,MAAQW,EACRV,aAAcA,EACdC,YAAaA,GAJRH,EAAKO,U,OCTjBM,EAAY,WAAwB,IAAtBC,EAAqB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,MACX,IAAK,MAEF,MAAM,GAAN,mBAAWF,GAAX,CAAiBC,EAAOE,UAE3B,IAAK,SAED,OAAOH,EAAMI,QAAO,SAAAR,GAAK,OAAIA,EAAMH,KAAOQ,EAAOE,WAErD,IAAK,SACD,OAAOH,EAAMH,KAAK,SAAAX,GAEd,OAAGA,EAAKO,KAAOQ,EAAOE,QAClB,2BACOjB,GADP,IAEIK,MAAOL,EAAKK,OAGTL,KAKnB,QACI,OAAOc,ICjBbK,EAAO,WAOT,OAAOC,KAAKC,MAAOC,aAAaC,QAAQ,WAAa,IAI5CC,EAAU,WAGnB,IAHyB,EA4BGC,qBAAWZ,EAAa,GAAIM,GA5B/B,mBA4BjBT,EA5BiB,KA4BVgB,EA5BU,OClBN,SAACC,GAAkB,IAAD,EACZC,mBAASD,GADG,mBAC9BE,EAD8B,KACvBC,EADuB,KAcpC,MAAM,CAACD,EAPmB,SAAC,GAAa,IAAZE,EAAW,EAAXA,OACzBD,EAAU,2BACHD,GADE,kBAEJE,EAAOC,KAAOD,EAAOE,UAPf,WACXH,EAAWH,KD6CoCO,CAAQ,CACvDC,YAAa,KAhCQ,mBA+BjBA,EA/BiB,KA+BjBA,YAAcC,EA/BG,KA+BiBC,EA/BjB,KAoCzBC,qBAAU,WACNhB,aAAaiB,QAAQ,QAAQnB,KAAKoB,UAAU9B,MAC9C,CAACA,IAyBH,OACI,gCACI,0CAAaA,EAAM+B,OAAnB,OACA,uBAEA,sBAAKrC,UAAU,MAAf,UAGI,qBAAKA,UAAU,QAAf,SAEI,cAAC,EAAD,CACIM,MAAOA,EACPP,YAlCA,SAACuC,GAOhBhB,EALa,CACTV,KAAM,SACNC,QAASyB,KA+BExC,aAxBC,SAACwC,GAOjBhB,EALa,CACTV,KAAM,SACNC,QAASyB,SA0BN,sBAAKtC,UAAU,QAAf,UACI,gDACA,uBAGA,uBAAMuC,SApFD,SAACC,GAClB,KAAIT,EAAYU,OAAOJ,QAAS,GAAhC,CAGAG,EAAEE,iBAGF,IAAMC,EAAQ,CACVxC,IAAI,IAAIyC,MAAOC,UACfzC,KAAM2B,EACN9B,MAAM,GAOVqB,EALa,CACTV,KAAM,MACNC,QAAS8B,IAIbV,MAkEY,UACI,uBACIrB,KAAK,OACLgB,KAAK,cACL5B,UAAU,eACV8C,YAAY,YACZC,aAAa,MACblB,MAAOE,EACPiB,SAAUhB,IAEd,wBACIpB,KAAK,SACLZ,UAAU,yCAFd,kCElGxBiD,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.fc439b27.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const TodoListItem = ({todo,index,handletoggle,handleDelet}) => {\r\n    return (\r\n    <li\r\n        key={todo.id}\r\n        className=\"list-group-item\"\r\n    >     \r\n        <p \r\n            className={`${todo.done && 'complete'}`}\r\n            onClick={()=>handletoggle(todo.id)}\r\n        > \r\n        {index + 1}.{ todo.desc }\r\n        </p>\r\n        <button \r\n            className=\"btn btn-danger\"\r\n            onClick={() => handleDelet(todo.id)}\r\n        >\r\n            Borrar\r\n        </button>\r\n    </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({todos,handletoggle,handleDelet}) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n\r\n        {\r\n            todos.map((todo ,i) =>(\r\n                \r\n                <TodoListItem \r\n                    key={todo.id}\r\n                    todo ={todo}\r\n                    index ={i}\r\n                    handletoggle={handletoggle}\r\n                    handleDelet={handleDelet}\r\n                />\r\n\r\n            ))\r\n        }\r\n\r\n        </ul>\r\n\r\n    )\r\n}\r\n","\r\n\r\nexport const todoReducer=( state=[], action ) =>{\r\n    switch (action.type) {\r\n        case 'add':\r\n            \r\n           return [...state,action.payload] ;\r\n\r\n        case 'delete':\r\n            \r\n            return state.filter(todos => todos.id !== action.payload) ;//filter regresa un nuevo arreglo osea que podemos especificar que cosas queremos que regrese el nuevo arregloe\r\n        \r\n        case 'toggle':\r\n            return state.map( todo =>{\r\n\r\n                if(todo.id === action.payload){\r\n                    return{\r\n                        ...todo,\r\n                        done: !todo.done//negamos el estado para cambiarlo\r\n                    }   \r\n                }else{\r\n                    return todo;\r\n                }\r\n\r\n            });\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\nimport React, { useEffect, useReducer } from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport '../08-useReducer/style.css'\r\nimport { TodoList } from './TodoList';\r\nimport { todoReducer } from './todoReducer';\r\n\r\n\r\n\r\nconst init = () =>{\r\n    // return [{\r\n    //     id: new Date().getTime(),\r\n    //     desc: 'Aprender React',\r\n    //     done: false,\r\n    // }];\r\n    \r\n    return JSON.parse( localStorage.getItem('todos')) || [];\r\n\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        if (description.trim().length <=1){\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        //console.log(\"nueva tarea\");\r\n\r\n        const newTodo={\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false,\r\n        };\r\n        const action={\r\n            type: 'add',\r\n            payload: newTodo,\r\n        };\r\n\r\n        dispatch(action);//es un disparador que manda la accion que queremos realizar\r\n        reset();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\r\n   \r\n\r\n    const [{description}, handleInputChange , reset] = useForm({\r\n        description: '',\r\n    });\r\n\r\n    \r\n    useEffect(()=>{//usare el useffect para cuando exista un cambio de todos se guarden en el localStorage\r\n        localStorage.setItem('todos',JSON.stringify(todos))//el localStorage solo guarda strings por lo que tendremos que convertir nuestro objeto en strings con la funcion de json\r\n    },[todos]);\r\n    //console.log(description);\r\n\r\n    const handleDelet = (todoId) =>{\r\n        \r\n         const action={\r\n             type: 'delete',\r\n             payload: todoId\r\n         };\r\n\r\n         dispatch(action);//es un disparador que manda la accion que queremos realizar\r\n        // reset();\r\n    } \r\n\r\n    const handletoggle = (todoId) =>{\r\n        \r\n         const action={\r\n             type: 'toggle',\r\n             payload: todoId\r\n         };\r\n\r\n         dispatch(action);//es un disparador que manda la accion que queremos realizar\r\n        // reset();\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <h1>Tareas ({todos.length})</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n\r\n\r\n                <div className=\"col-7\">\r\n \r\n                    <TodoList \r\n                        todos={todos}\r\n                        handleDelet ={handleDelet}\r\n                        handletoggle={handletoggle}\r\n\r\n                    />\r\n                    \r\n\r\n                </div>\r\n                <div className=\"col-5\">\r\n                    <h4>Agregar Tareas</h4>\r\n                    <hr/>\r\n                    \r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Tarea ...\"\r\n                            autoComplete=\"off\"\r\n                            value={description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                        >\r\n                            Agregar\r\n                        </button>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState) => {\r\n     const[values,setValues]=useState(initialState)\r\n\r\n     const reset = () =>{\r\n        setValues (initialState)\r\n     }\r\n\r\n     const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n     }\r\n\r\n     return[values,handleInputChange,reset]; //retornamos las dos funciones\r\n\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { CallBackHook } from './components/06-memos/CallBackHook';\n//import { Padre } from './components/07-tarea-memo/Padre';\n//import { MemoHook } from './components/06-memos/MemoHook';\n//import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n//import { Layout } from './components/05-LayoutEffect/Layout';\n//import { Memorize } from './components/06-memos/Memorize';\n//import { FormWhitCustomHook } from './components/01-useState/02-useEffect/FormWhitCustomHook';\n//import { MultipleCustomsHooks } from './components/03-examples/MultipleCustomsHooks';\n//import { FocusScreen } from './components/04-useRef/FocusScreen';\n//import { SimpleForm } from './components/01-useState/02-useEffect/SimpleForm';\n//import { CounterWhitCustomHook } from './components/01-useState/CounterWhitCustomHook';\n//import { CouterApp } from './components/01-useState/CouterApp';\n//import { HookApp } from './HookApp';\n//import './components/08-useReducer/intro-reducer';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n//import { MainApp } from './components/09-useContext/MainApp';\n\n\nReactDOM.render(\n\n    <TodoApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}